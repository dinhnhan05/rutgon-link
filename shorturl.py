import requests
import os
import time
from datetime import datetime
from termcolor import colored

HISTORY_FILE_PATH = '/sdcard/download/duanpython/link_history.txt'

os.makedirs(os.path.dirname(HISTORY_FILE_PATH), exist_ok=True)

def clear_screen():
    os.system('clear' if os.name == 'posix' else 'cls')

def show_banner():
    banner = """
     __        _______ _     ____ ___  __  __ _____ 
    \\ \\      / / ____| |   / ___/ _ \\|  \\/  | ____|
     \\ \\ /\\ / /|  _| | |  | |  | | | | |\\/| |  _|  
      \\ V  V / | |___| |__| |__| |_| | |  | | |___ 
       \\_/\\_/  |_____|_____\\____\\___/|_|  |_|_____|
    """
    
    info_text = """
    Link Shortener Tool
    Phi√™n b·∫£n: v1.0
    Admin: Nguy·ªÖn ƒê√¨nh Nh√¢n
    Contact: t.me/kiryosdinhnhan
    """

    border = '‚ïê' * (max(len(line) for line in info_text.split('\n')) + 4)
    
    delay = 0.04

    clear_screen()
    for line in banner.split('\n'):
        print(colored(line, 'cyan'))
        time.sleep(delay)
        
    print(colored(border, 'yellow'))
    for line in info_text.split('\n'):
        print(colored(f'‚ïë {line.ljust(len(border) - 4)} ‚ïë', 'yellow'))
    print(colored(border, 'yellow'))
    time.sleep(0.4)

    print("S·ª≠ d·ª•ng l·ªánh 'help' ƒë·ªÉ xem danh s√°ch l·ªánh üìö")
    time.sleep(0.5)

def show_help():
    help_text = """
    {0}{1}
    help - Hi·ªán danh s√°ch l·ªánh
    short <link> - R√∫t g·ªçn link
    history - Hi·ªán danh s√°ch link ƒë√£ r√∫t g·ªçn t·ª´ file txt ƒë√£ l∆∞u
    exit - Tho√°t tool
    """.format(
        colored("Danh s√°ch c√°c l·ªánh:", "red"),
        ""
    )
    print(help_text)

def shorten_url(link_to_shorten):
    try:
        api_url = f'http://tinyurl.com/api-create.php?url={link_to_shorten}'
        response = requests.get(api_url)
        
        if response.status_code == 200:
            short_url = response.text
            print(f'Link ƒë√£ ƒë∆∞·ª£c r√∫t g·ªçn: {short_url}')
            
            with open(HISTORY_FILE_PATH, 'a') as file:
                current_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
                file.write(f'Th·ªùi gian: {current_time} - Link g·ªëc: {link_to_shorten} - Link ƒë√£ r√∫t g·ªçn: {short_url}\n')
        else:
            print('C√≥ l·ªói x·∫£y ra, vui l√≤ng ki·ªÉm tra ƒë√£ ƒë√∫ng ƒë·ªãnh d·∫°ng link ch∆∞a!?')
    except Exception as e:
        print(f'ƒê√£ x·∫£y ra l·ªói: {e}')

def show_history():
    if os.path.exists(HISTORY_FILE_PATH):
        with open(HISTORY_FILE_PATH, 'r') as file:
            history = file.read()
        if history:
            print(f'L·ªãch s·ª≠ c√°c link ƒë√£ r√∫t g·ªçn:\n{history}')
        else:
            print('Ch∆∞a c√≥ link n√†o ƒë∆∞·ª£c r√∫t g·ªçn.')
    else:
        print('Ch∆∞a c√≥ link n√†o ƒë∆∞·ª£c r√∫t g·ªçn.')

def main():
    show_banner()
    while True:
        command = input(colored("=> Nh·∫≠p l·ªánh: ", 'light_green', attrs=["bold"])).strip()
        
        if command == 'help':
            show_help()
        elif command.startswith('short'):
            parts = command.split(' ', 1)
            if len(parts) == 1:
                print("Vui l√≤ng th√™m link ƒë·∫±ng sau l·ªánh 'short'. V√≠ d·ª•: short https://example.com")
            else:
                link_to_shorten = parts[1].strip()
                if link_to_shorten:
                    shorten_url(link_to_shorten)
                else:
                    print("Vui l√≤ng th√™m link ƒë·∫±ng sau l·ªánh 'short'. V√≠ d·ª•: short https://example.com")
        elif command == 'history':
            show_history()
        elif command == 'exit':
            print("Th√¥ng b√°o‚ùóƒê√£ d·ª´ng tool, c·∫£m ∆°n ƒë√£ s·ª≠ d·ª•ng tool.")
            break
        else:
            print("L·ªánh kh√¥ng h·ª£p l·ªá. Vui l√≤ng th·ª≠ l·∫°i.")

if __name__ == '__main__':
    main()
